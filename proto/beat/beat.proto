syntax = "proto3";

package beat;

option go_package = "github.com/JulieWasNotAvailable/proto/gen/go/beat;beatv1";

// Beat is service for managing beats
service Beat {
  rpc GetBeatById(GetBeatRequest) returns (GetBeatRequest); 
}


message GetBeatRequest {
  string beat_id = 1; // Beat id, = 1 stays for the number of the field (kinda like a key), string is cuz it's a uuid
}

message GetBeatResponse {
  string beat_id = 1;
  string name = 2;
  // AvailableFiles AvailableFiles = 3; //idk how to make available files another struct
  string picture = 4; // example:"https://storage.yandexcloud.net/imagesall/019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
  string beatmaker_id = 5; //uuid
  string beatmakerName = 6;
  string url = 7; // example:"https://storage.yandexcloud.net/mp3/019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
  uint32 price = 8;
  // Tags []Tag = 9;
  uint32 bpm = 10;
  string description = 11;
  // Genres []Genre = 12;
  // Moods []Mood = 13;
  // Keynote Keynote = 14;
  uint32 keynote_id = 15;
  // Timestamps []Timestamp = 16;
  // Instruments []Instrument = 17;
  int64 plays = 18;
  string status = 19;
  int64 created_at = 20;
}


// message RegisterResponse {
//   int64 user_id = 1; // User ID of the registered user.
// }

// message LoginRequest {
//   string email = 1; // Email of the user to login.
//   string password = 2; // Password of the user to login.
//   int32 app_id = 3; // ID of the app to login to.
// }

// message IsAdminRequest {
  //   int64 user_id = 1; // User ID to validate.
// }

// message IsAdminResponse {
//   bool is_admin = 1;  // Indicates whether the user is an admin.
// }

// message LoginResponse {
//   string token = 1; // Auth token of the logged in user.
// }

// message LogoutRequest {
//   string token = 1; // Auth token of the user to logout.
// }

// message LogoutResponse {
//   bool success = 1; // Indicates whether the logout was successful.
// }